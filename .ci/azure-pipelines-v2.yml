# MLAKSDeploy Pipeline
resources:
  repositories:
    - repository: aitemplates
      type: github
      name: microsoft/AI
      # The endpoint must be created for the ADO Workspace
      endpoint: AIArchitecturesAndPractices-GitHub

variables:
  CloudPlatform: AzureCloud
  TridentWorkloadType: ai-dl-train-int
  TridentWorkloadTypeShort: aidltrain
  DeployLocation: eastus  
  TestPostfix: ""
  DeploymentName: DLTrainDeployJob
  ProjectLocation: "."
  PythonPath: "."

  # The following variables must be set as build paramters and be configured by the user
  azureSubscription: $(AzureSubscriptionName)
  azure_subscription: $(AzureSubscriptionID)
  Agent: $(Agent_Name)
  cluster_name: "dltraincompute"

# In additional to the above variables, the "template" parameter of the last step must also be hard coded for each workload

trigger:
  batch: true
  branches:
    include:
    - master

jobs:
- job: build_deploy_ai
  displayName: 'Build deploy AI'

  timeoutInMinutes: 180

  pool:
    name: $(Agent)
    demands: GPU

  workspace:
    clean: all

  variables:
    DeploymentGuidTag: $[ dependencies.build_relayer_sources.outputs['GenDeployGuidTag.DeploymentGuid'] ]
    DeploymentTimeStamp: $[ dependencies.build_relayer_sources.outputs['GenDeployTimeStamp.timeStamp'] ]
    EnvironmentPrefix: $(TridentWorkloadType)-$(CloudPlatform)-$(DeployLocation)$(TestPostfix)
    ResourcePrefix: $(TridentWorkloadTypeShort)-$(DeployLocation)$(TestPostfix)
    EnvironmentContext: $(EnvironmentPrefix)-$(DeploymentGuidTag)
    AIResourceGroupName: $(TridentWorkloadTypeShort)-$(DeployLocation)$(TestPostfix)

  steps:

  - template: .ci/steps/docker_clean.yml@aitemplates

  - template: .ci/steps/deploy_notebook_steps.yml@aitemplates
    parameters:
      deployment_name: $(DeploymentName)
      template: DLTrainDeployJob.yml
      azureSubscription: $(azureSubscription)
      azure_subscription: $(azure_subscription)
      azureresourcegroup: $(AIResourceGroupName)
      workspacename: $(TridentWorkloadTypeShort)-$(DeployLocation)
      azureregion: $(DeployLocation)
      aksimagename: myimage
      environment: $(EnvironmentContext)
      doCleanup: False
      alias: $(Build.QueuedBy)
      project: $(TridentWorkloadTypeShort)
      agent: $(Agent)
      ENVIRONMENT_PREFIX: $(EnvironmentPrefix)
      deploymentguidtag: $(DeploymentGuidTag)
      aks_name: $(TridentWorkloadTypeShort)$(Deploy_Location_Short)
      python_path: $(System.DefaultWorkingDirectory)$(PythonPath)
      location: $(ProjectLocation)
      python_secret_root: "./"
      acr_name: "aidltune"
      cluster_name: $(cluster_name)
